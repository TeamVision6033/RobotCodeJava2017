// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6033.GearRobot2017.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc6033.GearRobot2017.Robot;

/**
 *
 */
public class DriveTurnLeft extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	 private double m_speed;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	 private double timeLimit = 0;
	 private double degrees = 0;
	 private double degreesTurned = 0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public DriveTurnLeft(double speed, double timeLimit, double degrees) {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
    	m_speed = speed;

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drive);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        this.timeLimit = timeLimit;
        this.degrees = degrees;
		if (timeLimit > 0)
			setTimeout(timeLimit);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.drive.TurnLeft(m_speed);
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
		if (Math.abs(degreesTurned) > 0 && degrees > 0 && Math.abs(degreesTurned) >= degrees)
			return true;
		if (timeLimit > 0 && this.isTimedOut())
			return true;
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drive.Stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	this.end();
    }
}
